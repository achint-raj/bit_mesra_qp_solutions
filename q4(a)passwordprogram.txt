wap in C to implement password registration, that accepts a string as password
 if it is at least 8 characters in length, has at least one capital letter, small letter, digit, 
 and a special character.


 SOL.
 #include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>

bool is_valid_password(char password[]) {  
    int len = strlen(password);
    bool has_upper = false;
    bool has_lower = false;
    bool has_digit = false;
    bool has_special = false;

    if (len < 8)
        return false;

    for (int i = 0; i < len; i++) {
        char ch = password[i];
        if (isupper(ch))
            has_upper = true;
        else if (islower(ch))
            has_lower = true;
        else if (isdigit(ch))
            has_digit = true;
        else if (!isalnum(ch))
            has_special = true;
    }

    return (has_upper && has_lower && has_digit && has_special);
}

int main() {
    char password[100];
    printf("Enter your password: ");
    scanf("%s", password);

    if (is_valid_password(password))
        printf("Password is valid.\n");
    else
        printf("Password is not valid. It should be at least 8 characters long, containing at least one capital letter, one small letter, one digit, and one special character.\n");

    return 0;
}


//In C, when declaring a function that takes a string as a parameter,
 you can write the parameter as char password[], char *password, or const char *password.
 All these forms are equivalent and serve the same purpose of accepting a string as an argumen
