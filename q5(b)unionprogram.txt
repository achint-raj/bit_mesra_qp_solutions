wap in  c that takes 2 integers sets A[] and B[] as inout and prints the  union between
the two sets.
NOTE - All the elements inthe output set should be unique.
inout: A=[2,5,8], B = [8,8,3]
ouput:C=[2,3,5,8]


Sol.
#include <stdio.h>

void printUnion(int A[], int sizeA, int B[], int sizeB) {
    int C[sizeA + sizeB];
    int i, j, k;
    int isDuplicate;

    // Copy elements from set A to C
    for (i = 0; i < sizeA; i++) {
        C[i] = A[i];
    }

    // Add elements from set B to C, avoiding duplicates
    k = sizeA;
    for (i = 0; i < sizeB; i++) {
        isDuplicate = 0;
        for (j = 0; j < sizeA; j++) {
            if (B[i] == A[j]) {
                isDuplicate = 1;
                break;
            }
        }

        if (!isDuplicate) {
            C[k] = B[i];
            k++;
        }
    }

    // Print the union set C
    printf("C=[");
    for (i = 0; i < k; i++) {
        printf("%d", C[i]);
        if (i < k - 1) {
            printf(",");
        }
    }
    printf("]\n");
}

int main() {
    int A[] = {2, 5, 8};
    int sizeA = sizeof(A) / sizeof(A[0]);

    int B[] = {8, 8, 3};
    int sizeB = sizeof(B) / sizeof(B[0]);

    printUnion(A, sizeA, B, sizeB);

    return 0;
}
